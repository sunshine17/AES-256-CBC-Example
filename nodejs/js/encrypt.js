// Generated by CoffeeScript 1.7.1
(function() {
  var Encrypt, crypto;

//  var kx = 'RwcmlVpg';
  var kx = 'thisIsASecretKey';

  crypto = require("crypto");

  Encrypt = module.exports = (function() {
    var b64dec, b64enc, cipher, decrypt, encrypt, iv, key;
//    key = crypto.createHash("sha256").update(kx).digest();
//    key = crypto.createHash("sha1").update(kx).digest();
    key = new Buffer(kx).toString('binary');
    iv = '4e5Wa71fYoT7MFEX';
    cipher = function(mode, data) {
      var encipher, encoded;
//      encipher = crypto[mode]("aes-256-cbc", key, iv);
      encipher = crypto[mode]("aes128", key, iv);
      encoded = encipher.update(data);
      encoded += encipher.final();
      return encoded;
    };
    encrypt = function(data) {
      return b64enc(cipher("createCipheriv", data));
    };

    hashx = function() {
        var args = Array.prototype.slice.call(arguments);
        return encrypt(args.join('|'));
    };

    decx = function(data){
        var x = decrypt(data);
        if (!x) {return x;};
        return x.split('|');
    };

    decrypt = function(data) {
      return cipher("createDecipheriv", b64dec(data));
    };
    b64enc = function(data) {
      var b;
      b = new Buffer(data, "binary");
      return b.toString("base64");
    };
    b64dec = function(data) {
      var b;
      b = new Buffer(data, "base64");
      return b.toString("binary");
    };
    return {
        hashx: hashx,
        decx: decx,
      encrypt: encrypt,
      decrypt: decrypt
    };
  })();

}).call(this);
